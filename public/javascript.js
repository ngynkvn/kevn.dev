import React, { useState } from "react"
import Maze from "../components/maze"
import { drawStepGenerator, drawMazeGenerator } from "../code/maze"
import Layout from "../components/layout"

const defaultParams = {
    width: 400,
    height: 400,
    pathWidth: 5,
    squareSize: 20,
    timeDelta: 10,
    generatorFunction: drawMazeGenerator,
    _update: false,
}

export default () => {
    const [params, setParams] = useState(defaultParams)
    const [toUpdate, setUpdate] = useState(defaultParams)
    const restartButton = () => {
        setParams(prevState => ({
            ...toUpdate,
            _update: !prevState._update,
        }))
    }
    const toggleGenerator = () => {
        setParams(prevState => ({
            ...prevState,
            generatorFunction:
                prevState.generatorFunction === drawStepGenerator
                    ? drawMazeGenerator
                    : drawStepGenerator,
        }))
        setUpdate(params)
    }
    const updateEvent = param => ({ target: { value } }) =>
        setUpdate(prevState => {
            return { ...prevState, [param]: parseInt(value, 10) || 0 }
        })
    return (
        <Layout>
            <div style={{ width: "100%", textAlign: "center" }}>
                <p>Some random JS stuff here.</p>
                <p>
                    The canvas art below is generated by an algorithm specified
                    <a href="https://github.com/ngynkvn/webpage-gatsby/blob/master/src/code/maze.js">
                        {" "}
                        in this src file{" "}
                    </a>
                    They are implemented as generator functions to permit
                    viewing the individual steps of the algorithm as it takes
                    place.
                </p>
                <Maze {...params}></Maze>
                <div>
                    <button onClick={restartButton}> Restart </button>
                    <button onClick={toggleGenerator}>
                        {params.generatorFunction === drawStepGenerator
                            ? "Step"
                            : "Maze"}
                    </button>
                </div>
                <div>
                    Height:{" "}
                    <input
                        param="height"
                        value={toUpdate.height}
                        onChange={updateEvent("height")}
                    />
                    Width:{" "}
                    <input
                        param="width"
                        value={toUpdate.width}
                        onChange={updateEvent("width")}
                    />
                    TimeDelta:{" "}
                    <input
                        param="timeDelta"
                        value={toUpdate.timeDelta}
                        onChange={updateEvent("timeDelta")}
                    />
                </div>
                <div>
                    PathWidth:{" "}
                    <input
                        param="pathWidth"
                        value={toUpdate.pathWidth}
                        onChange={updateEvent("pathWidth")}
                    />
                </div>
                <div>
                    SquareSize:{" "}
                    <input
                        param="squareSize"
                        value={toUpdate.squareSize}
                        onChange={updateEvent("squareSize")}
                    />
                </div>
            </div>
        </Layout>
    )
}
